# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build Desktop App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build_and_package:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '18'
        distribution: 'temurin'
    - name: Build Uber Jar
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: packageReleaseUberJarForCurrentOS
    - name: Build Native distribution
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: packageDistributionForCurrentOS
    - name: Archive artifacts (window-uber-jars)
      uses: actions/upload-artifact@v3
      with:
        name: uber-jar-windows
        path: build/compose/jars/*windows*.jar
    - name: Archive artifacts (windows)
      uses: actions/upload-artifact@v3
      with:
        name: windows-binaries
        path: build/compose/binaries/main/msi
    - name: Archive artifacts (linux-uber-jars)
      uses: actions/upload-artifact@v3
      with:
        name: uber-jar-linux
        path: build/compose/jars/*linux*.jar
    - name: Archive artifacts (linux)
      uses: actions/upload-artifact@v3
      with:
        name: linux-binaries
        path: build/compose/binaries/main/deb
    - name: Archive artifacts (macos)
      uses: actions/upload-artifact@v3
      with:
        name: macos-binaries
        path: build/compose/binaries/main/dmg
        if-no-files-found: ignore
